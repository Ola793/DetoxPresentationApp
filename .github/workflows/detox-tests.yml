name: Detox E2E Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install Android SDK components
      run: |
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"
        sdkmanager "system-images;android-33;default;x86_64"
        sdkmanager "emulator"
        
    - name: Create AVD
      run: |
        avdmanager create avd \
          --name Pixel_7 \
          --package "system-images;android-33;default;x86_64" \
          --device "pixel_7" \
          --force
          
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Build Detox
      run: npm run detox:build
      
    - name: Start emulator in background
      run: |
        nohup $ANDROID_HOME/emulator/emulator -avd Pixel_7 -no-snapshot-save -no-audio -no-window -no-boot-anim -gpu swiftshader_indirect -camera-back none -camera-front none -memory 2048 > /dev/null 2>&1 &
        echo $! > emulator.pid
        
    - name: Wait for emulator to boot
      timeout-minutes: 8
      run: |
        adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'
        adb devices
        echo "Emulator booted successfully"
        sleep 5
        
    - name: Run Detox tests
      run: npm run detox:test
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: detox-test-results
        path: |
          test-report.html
          artifacts/
          
    - name: Upload test report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: test-report.html
